<?xml version="1.0"?>
<robot name="new_car" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="base_width" value="1.041"/>
    <xacro:property name="base_length" value="1.892"/>
    <xacro:property name="base_height" value="0.626"/>

    <xacro:property name="wheel_radius" value="0.191"/>
    <xacro:property name="wheel_width" value="0.121"/>
    <xacro:property name="wheel_ygap" value="-0.06"/>
    <xacro:property name="wheel_zoff" value="0.123"/>
    <xacro:property name="wheel_xoff" value="0.756"/>

      <!-- Define inertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <origin xyz=".946 .521 -.313" rpy="0 0 ${pi}" />
        <geometry>
        <!-- <box size="${base_length} ${base_width} ${base_height}"/> -->
          <mesh filename="package://agv_car_gazebo/models/agv_car/meshes/agv_chassis.stl"/>
        </geometry>
        <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
        </material>
    </visual>

    <collision>
      <geometry>
        <mesh filename="package://agv_car_gazebo/models/agv_car/meshes/agv_chassis.stl"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

<!-- Wheels -->
  <xacro:macro name="rearwheel" params="prefix x_reflect y_reflect">
    <link name="rear_${prefix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="rear_${prefix}_wheel_joint" type="revolute">
      <parent link="base_link"/>
      <child link="rear_${prefix}_wheel"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="1000.0" lower="-0.698" upper="0.698" velocity="0.5"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="steering_wheel" params="prefix x_reflect y_reflect">
    <link name="front_${prefix}_steering_wheel_link">
      <visual>
        <origin xyz="0.05 ${y_reflect * (wheel_width / 2 - .1)} 0" rpy="${pi/2} ${pi/2} 0"/>
        <geometry>
            <cylinder radius="0.029999999" length="0.1000000"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 -0 0"/>
        <geometry>
          <cylinder radius="0.029999999" length="0.10000000"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="front_${prefix}_wheel_steering_joint" type="revolute">
      <parent link="base_link"/>
      <child link="front_${prefix}_steering_wheel_link"/>
      <origin xyz="${x_reflect * wheel_xoff} ${y_reflect * (base_width / 2 + wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="1000.0" lower="-0.698" upper="0.698" velocity="0.5"/>
    </joint>
  </xacro:macro>


<xacro:macro name="frontwheel" params="prefix x_reflect y_reflect">
    <link name="front_${prefix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="front_${prefix}_wheel_joint" type="revolute">
      <parent link="front_${prefix}_steering_wheel_link"/>
      <child link="front_${prefix}_wheel"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="1000.0" lower="-0.698" upper="0.698" velocity="0.5"/>
    </joint>
  </xacro:macro>
  
  <!-- <link name="velodyne">
  <visual>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <geometry>
      <cylinder length=".0762" radius=".0762"/>
    </geometry>
    <material name="Cyan">
      <color rgba="0 1.0 1.0 1.0"/>
    </material>
  </visual>
    <gazebo>
      <sensor type="gpu_ray" name="velodyne_lidar">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>20</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.5708</min_angle>
              <max_angle>1.5708</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
          <topicName>/scan</topicName>
          <frameName>velodyne</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </link>

  <joint name="velodyne_joint" type="fixed">
    <parent link="base_link"/>
    <child link="velodyne"/>
    <origin xyz ="0 0 1.0414" rpy="0 0 0"/>
  </joint>
   <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
  </joint>

  <link name="imu_link"/>

  <joint name="scan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin xyz="-0.064 0 0.122" rpy="0 0 0"/>
  </joint>

  <link name="base_scan">
    <visual>
      <origin xyz=".946 .521 -.313" rpy="0 0 ${pi}"/>
      <geometry>
        <mesh filename="package://agv_car_gazebo/models/agv_car/meshes/agv_chassis.stl"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.0315" radius="0.055"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.114" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link> -->


  <xacro:rearwheel prefix="left" x_reflect="-1" y_reflect="1" />
  <xacro:rearwheel prefix="right" x_reflect="-1" y_reflect="-1" />
  <xacro:steering_wheel prefix="left" x_reflect="1" y_reflect="1" />
  <xacro:steering_wheel prefix="right" x_reflect="1" y_reflect="-1" />
  <xacro:frontwheel prefix="left" x_reflect="1" y_reflect="1" />
  <xacro:frontwheel prefix="right" x_reflect="1" y_reflect="-1" />

</robot>